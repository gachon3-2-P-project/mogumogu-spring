name: Docker
on:
  pull_request:
    types: [closed]
    workflow_dispatch:
#  pull_request:
#    types: [closed]
#  workflow_dispatch: # (2).수동 실행도 가능하도록
permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # 도커 메타
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: sanbonai06/bankids-client
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}

      # 도커 빌드 관련 셋업
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker build and release
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/react .
          docker push ${{ secrets.DOCKER_USERNAME }}/react:latest
      ## 4) Docker Hub에 Push한 이미지를 리눅스 서버에 받아와서 run
      # 도커이미지 빌드하고 허브로 푸쉬
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.prod
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}